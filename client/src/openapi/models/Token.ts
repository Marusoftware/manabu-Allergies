/* tslint:disable */
/* eslint-disable */
/**
 * ManabuAllergies API
 * API of ManabuAllergies
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TokenType } from './TokenType';
import {
    TokenTypeFromJSON,
    TokenTypeFromJSONTyped,
    TokenTypeToJSON,
} from './TokenType';

/**
 * 
 * @export
 * @interface Token
 */
export interface Token {
    /**
     * 
     * @type {string}
     * @memberof Token
     */
    accessToken: string;
    /**
     * 
     * @type {TokenType}
     * @memberof Token
     */
    tokenType: TokenType;
    /**
     * 
     * @type {string}
     * @memberof Token
     */
    userId: string;
    /**
     * 
     * @type {Date}
     * @memberof Token
     */
    expiredIn: Date;
}

/**
 * Check if a given object implements the Token interface.
 */
export function instanceOfToken(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accessToken" in value;
    isInstance = isInstance && "tokenType" in value;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "expiredIn" in value;

    return isInstance;
}

export function TokenFromJSON(json: any): Token {
    return TokenFromJSONTyped(json, false);
}

export function TokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): Token {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accessToken': json['access_token'],
        'tokenType': TokenTypeFromJSON(json['token_type']),
        'userId': json['user_id'],
        'expiredIn': (new Date(json['expired_in'])),
    };
}

export function TokenToJSON(value?: Token | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'access_token': value.accessToken,
        'token_type': TokenTypeToJSON(value.tokenType),
        'user_id': value.userId,
        'expired_in': (value.expiredIn.toISOString()),
    };
}

